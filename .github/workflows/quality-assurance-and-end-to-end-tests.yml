# Quality assurance & end-to-end tests workflow
#
# This workflow runs comprehensive testing for all commits and PRs, with optimized
# handling for release commits to balance security and efficiency.
#
# Design decisions:
# 1. **Job-gate pattern**: A dedicated job (detect-release-commit) checks if the current
#    commit is a release commit. Subsequent jobs only run if it's NOT a release commit.
#
# 2. **Security through local testing**: Release commits are safe to skip in CI because
#    the release script (safe-release.mjs) runs ALL quality assurance tests locally
#    BEFORE pushing. If local tests fail, no push happens. This ensures:
#    - Release commits are always tested (locally)
#    - CI resources are not wasted on duplicate testing (~4 minutes saved)
#    - Admins cannot bypass testing, even with branch protection bypass
#
# 3. **Resource optimization**:
#    - For NORMAL commits and PRs: Full quality assurance suite runs (~4 minutes)
#    - For RELEASE commits: All quality assurance jobs are skipped (~30 seconds)
#
# 4. **Performance improvements**:
#    - Optimized npm flags (--no-audit --no-fund --loglevel=error)
#    - Playwright browser caching
#    - Job-level conditional execution (not just step-level)
#    - Composite actions for reusable steps
#
# 5. **Modular structure**:
#    - Reusable workflows for shared logic (detect-release-commit)
#    - Composite actions for repeatable tasks (setup-npmrc, setup-node-dependencies, setup-playwright, quality-assurance)
#    - Improved maintainability through centralized definition of common steps
#
# 6. **Artifact preservation**: Uploads Playwright reports for debugging failed tests,
#    even when the workflow fails (but not when cancelled).
#
# 7. **Concurrency control**: Prevents parallel runs for the same PR/branch to save
#    CI resources. Main branch pushes run independently as they represent deployment stages.

name: Quality assurance & end-to-end tests

concurrency:
  group: app-qa-e2e-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-release-commit:
    name: Detect release commit
    uses: ./.github/workflows/_reusable-detect-release-commit.yml

  quality-assurance:
    name: Quality assurance
    needs: detect-release-commit
    if: needs.detect-release-commit.outputs.is_release_commit == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .npmrc for GitHub packages
        uses: ./.github/actions/setup-npmrc
        with:
          github_token: ${{ secrets.GH_PAT }}

      - name: Setup Node and install dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run quality assurance
        uses: ./.github/actions/quality-assurance

      - name: Verify package can be packed
        run: |
          npm pack --dry-run
          echo "Package packing verification passed"

  end-to-end-tests:
    name: End-to-end tests
    needs: detect-release-commit
    if: needs.detect-release-commit.outputs.is_release_commit == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .npmrc for GitHub packages
        uses: ./.github/actions/setup-npmrc
        with:
          github_token: ${{ secrets.GH_PAT }}

      - name: Setup Node and install dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Setup Playwright for end-to-end tests
        uses: ./.github/actions/setup-playwright

      - name: Build application for end-to-end tests
        run: npm run build

      - name: Run end-to-end tests
        run: npm run test:e2e

      - name: Upload end-to-end test report
        if: ${{ always() && !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
